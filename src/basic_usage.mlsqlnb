[{"kind":2,"language":"mlsql","value":"load excel.`./example-data/excel/user-behavior.xlsx` \nwhere header=\"true\" \nas user_behavior;\n\nselect count(*) from user_behavior as output;","outputs":[]},{"kind":2,"language":"mlsql","value":"!show version;","outputs":[{"mime":"x-application/mlsql-notebook","value":"{\n\t\"schema\": {\n\t\t\"type\": \"struct\",\n\t\t\"fields\": [\n\t\t\t{\n\t\t\t\t\"name\": \"version\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"buildBy\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"date\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"srcChecksum\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"revision\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"branch\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"url\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"core\",\n\t\t\t\t\"type\": \"string\",\n\t\t\t\t\"nullable\": true,\n\t\t\t\t\"metadata\": {}\n\t\t\t}\n\t\t]\n\t},\n\t\"data\": [\n\t\t{\n\t\t\t\"version\": \"2.3.2\",\n\t\t\t\"buildBy\": \"root\",\n\t\t\t\"date\": \"2022-07-26T07:11Z\",\n\t\t\t\"srcChecksum\": \"8a276f8a95626be9b487d231340788c\",\n\t\t\t\"revision\": \"0d436589ba0051da0217fbb5de0966a0d9ffa414\",\n\t\t\t\"branch\": \"v2.3.2-branch\",\n\t\t\t\"url\": \"https://github.com/byzer-org/byzer-lang.git\",\n\t\t\t\"core\": \"3.1.1\"\n\t\t}\n\t]\n}"}]},{"kind":1,"language":"markdown","value":"## Variable","outputs":[]},{"kind":2,"language":"mlsql","value":"set v1 = \"a\" where scope=\"session\";","outputs":[]},{"kind":2,"language":"mlsql","value":"select \"${v1}\" as col as output;","outputs":[]},{"kind":1,"language":"markdown","value":"## UDF","outputs":[]},{"kind":2,"language":"mlsql","value":"register ScriptUDF.`` as arrayLast \nwhere lang=\"scala\"\nand code='''def apply(a:Seq[String])={\n      a.last\n}'''\nand udfType=\"udf\";","outputs":[]},{"kind":2,"language":"mlsql","value":"select arrayLast(array(\"a\",\"b\")) as lastChar as output;","outputs":[]},{"kind":1,"language":"markdown","value":"## Branch statement","outputs":[]},{"kind":2,"language":"mlsql","value":"select 1 as a as mockTable;\nset b_count=`select count(*) from mockTable ` where type=\"sql\" and mode=\"runtime\";\n\n!if ''':b_count == 1 ''';    \n    select 1 as a  as final_table;\n!else;    \n    select 2 as a  as final_table;\n!fi;    \n\nselect * from final_table as output;","outputs":[]},{"kind":1,"language":"markdown","value":"## Module","outputs":[]},{"kind":2,"language":"mlsql","value":"include lib.`gitee.com/allwefantasy/lib-core`\nwhere alias=\"libCore\";","outputs":[]},{"kind":2,"language":"mlsql","value":"include local.`libCore.udf.hello`;\nselect hello() as name as output;","outputs":[]},{"kind":1,"language":"markdown","value":"## Function","outputs":[]},{"kind":2,"language":"mlsql","value":"set loadExcel = '''\nload excel.`{0}` \nwhere header=\"true\" \nas {1}\n''';\n\n!loadExcel ./example-data/excel/hello_world.xlsx helloTable;","outputs":[]},{"kind":2,"language":"mlsql","value":"set loadExcel = '''\nload excel.`${path}` \nwhere header=\"true\" \nas ${tableName}\n''';\n\n!loadExcel _ -path ./example-data/excel/hello_world.xlsx -tableName helloTable;","outputs":[]},{"kind":1,"language":"markdown","value":"## Extension","outputs":[]},{"kind":2,"language":"mlsql","value":"!plugin app add - \"byzer-openmldb-3.0\";","outputs":[]}]